{
    "chat.instructionsFilesLocations": {
        "./.copilot/instructions": true
    },
    "chat.modeFilesLocations": {
        "./.copilot/chatmodes": true
    },
    "chat.promptFilesLocations": {
        "./.copilot/prompts": true
    },
    "files.associations": {
        "*.md": "markdown"
    },
    "github.copilot.chat.codeGeneration.useInstructionFiles": true,
    "github.copilot.enable": {
        "*": true,
        "plaintext": true,
        "markdown": true,
        "scminput": false
    },
    
    // === RUST ANALYZER PROJECT CONFIGURATION ===
    // IMPORTANT: Update this path to your local project location
    // Example: "/Users/YOUR_USERNAME/Projects/YOUR_PATH/airs/Cargo.toml"
    "rust-analyzer.linkedProjects": [
        "REPLACE_WITH_YOUR_LOCAL_PATH/airs/Cargo.toml"
    ],
    
    // === VERIFIED RUST ANALYZER SETTINGS ===
    "rust-analyzer.cargo.features": "all",
    "rust-analyzer.cargo.allTargets": true,
    "rust-analyzer.procMacro.enable": true,
    "rust-analyzer.imports.granularity.group": "module",
    "rust-analyzer.diagnostics.enable": true,
    "rust-analyzer.hover.actions.enable": true,
    "rust-analyzer.hover.actions.references.enable": true,
    "rust-analyzer.hover.actions.run.enable": true,
    "rust-analyzer.hover.actions.debug.enable": true,
    "rust-analyzer.inlayHints.bindingModeHints.enable": true,
    "rust-analyzer.inlayHints.closingBraceHints.minLines": 10,
    "rust-analyzer.inlayHints.closureReturnTypeHints.enable": "with_block",
    "rust-analyzer.inlayHints.discriminantHints.enable": "fieldless",
    "rust-analyzer.inlayHints.lifetimeElisionHints.enable": "skip_trivial",
    "rust-analyzer.inlayHints.typeHints.enable": true,
    "rust-analyzer.lens.enable": true,
    "rust-analyzer.lens.run.enable": true,
    "rust-analyzer.lens.debug.enable": true,
    "rust-analyzer.lens.implementations.enable": true,
    "rust-analyzer.lens.references.enable": true,
    "rust-analyzer.workspace.symbol.search.scope": "workspace_and_dependencies",
    "rust-analyzer.workspace.symbol.search.kind": "all_symbols",
    "rust-analyzer.cargo.buildScripts.enable": true,
    "rust-analyzer.completion.callable.snippets": "fill_arguments",
    "rust-analyzer.cachePriming.enable": true,
    "rust-analyzer.cachePriming.numThreads": 0,
    
    "[rust]": {
        "editor.defaultFormatter": "rust-lang.rust-analyzer",
        "editor.formatOnSave": true,
        "editor.codeActionsOnSave": {
            "source.fixAll": "explicit"
        }
    },
    
    "files.exclude": {
        "**/target": true,
        "**/.git": true
    },
    
    "search.exclude": {
        "**/target": true,
        "**/Cargo.lock": true
    }
}